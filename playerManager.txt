ctx.runOnUiThread(new java.lang.Runnable({
run: function(){
try{
btnPlayer = new PopupWindow();
var layout = new android.widget.RelativeLayout(ctx);
var button = new Button(ctx);
button.setText("PM");
button.setOnClickListener(new View.OnClickListener({
onClick: function(v){
if(menuP==null){
try{
var players = [];
for each(var e in Entity.getAll()){
if(ESP.isPlayer(e)){
players.push(e);
}
}
var dialog = new AlertDialog.Builder(ctx, holoDark);
var layout = new LinearLayout(ctx);
layout.setOrientation(1);
var radios = new android.widget.RadioGroup(ctx);
radios.setOrientation(1);
var radio = new Array();
for(var n=0;n<players.length;n++){
radio[n] = new android.widget.RadioButton(ctx);
radio[n].setText(Player.getName(players[n]));
radio[n].setId(n);
radios.addView(radio[n]);
}
radios.setOnCheckedChangeListener(new android.widget.RadioGroup.OnCheckedChangeListener({
onCheckedChanged: function (group, checkedId){
playerTarget = players[checkedId];
}
}));
layout.addView(radios);
var pad = dip2px(ctx, 5);
layout.setPadding(pad, pad, pad, pad);
var scroll = ScrollView(ctx);
scroll.addView(layout);
dialog.setTitle("Player Manager");
dialog.setView(scroll);
dialog.setNegativeButton("취소", null);
dialog.setPositiveButton("확인", new DialogInterface.OnClickListener({
onClick: function(v){
ESP.toast("Player was selected.");
try{
menuP = new PopupWindow();
var layout = new LinearLayout(ctx);
layout.setOrientation(1);
var text = new TextView(ctx);
text.setText("Player Manager\n");
text.setTextSize(23);
text.setGravity(Gravity.CENTER);
var txt = new TextView(ctx);
txt.setText("  target : "+Player.getName(playerTarget));
txt.setTextSize(18);
var button = [];
var menus = ["Send Player", "Call Player", "Go to Player", "Set Health", "Give Item", "Give Support Items", "Kick Player"];
for(var n in menus){
button[n] = new Button(ctx);
button[n].setText(menus[n]);
button[n].setBackgroundColor(Color.argb(100, 100, 100, 100));
}
button[0].setOnClickListener(new View.OnClickListener() {
onClick: function(v){
ESP.send(playerTarget);
ESP.toast(Player.getName(playerTarget)+" was sent");
}
});
button[1].setOnClickListener(new View.OnClickListener() {
onClick: function(v){
teleport(playerTarget, Entity.getX(ad), Entity.getY(ad)+1, Entity.getZ(ad));
ESP.toast(Player.getName(playerTarget)+" was called");
}
});
button[2].setOnClickListener(new View.OnClickListener() {
onClick: function(v){
Entity.setPosition(ad, Entity.getX(playerTarget), Entity.getY(playerTarget)+1, Entity.getZ(playerTarget));
ESP.toast("Teleported to "+Player.getName(playerTarget));
}
});
button[3].setOnClickListener(new View.OnClickListener() {
onClick: function(v){
playerHealthSet();
}
});
button[4].setOnClickListener(new View.OnClickListener() {
onClick: function(v){
addItem(false);
}
});
button[5].setOnClickListener(new View.OnClickListener() {
onClick: function(v){
giveItems(playerTarget);
ESP.toast("아이템이 지급되었습니다.");
}
});
button[6].setOnClickListener(new View.OnClickListener() {
onClick: function(v){
ESP.toast(Player.getName(playerTarget)+" was kicked");
Entity.remove(playerTarget);
}
});
var exit = makeExitButton(menuP);
exit.setBackgroundColor(android.graphics.Color.argb(100, 100, 100, 100));
layout.addView(text);
layout.addView(txt);
for(var n in menus)
layout.addView(button[n]);
layout.addView(exit);
var scroll = makeScroll(layout,menuP);
menuP.setContentView(scroll);
menuP.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(Color.argb(150, 0, 0, 0)));
menuP.showAtLocation(ctx.getWindow().getDecorView(),Gravity.RIGHT|Gravity.TOP, 0, 0);
}
catch(e){
clientMessage(e+", "+e.lineNumber);
}
}
}));
dialog.show();
}
catch(e){
clientMessage(e+", "+e.lineNumber);
}
}
else{
if(menuP!=null){
menuP.dismiss();
menuP = null;
}
}
}
}));
button.setOnLongClickListener(new View.OnLongClickListener({
onLongClick: function(v){
addItemInventory(302, 1, 0);
addItemInventory(303, 1, 0);
addItemInventory(304, 1, 0);
addItemInventory(305, 1, 0);
addItemInventory(267, 1, 0);
addItemInventory(354, 30, 0);
addItemInventory(320, 30, 0);
if(mcpev4){
addItemInventory(373, 30, 28);
addItemInventory(373, 15, 30);
}
Player.setArmorSlot(0, 306, 0);
Player.setArmorSlot(1, 307, 0);
Player.setArmorSlot(2, 308, 0);
Player.setArmorSlot(3, 309, 0);
ESP.toast("Items were set.");
return true;
}
}));
if(emcolor==0){
button.setBackgroundColor(Color.argb(70, 0, 0, 0));
}
else if(emcolor==1){
button.setBackgroundColor(Color.argb(70, 255, 255, 255));
}
else if(emcolor==2){
button.setBackgroundColor(Color.argb(0, 0, 0, 0));
}
layout.addView(button);
btnPlayer.setContentView(layout);
btnPlayer.setWidth(dip2px(ctx, 50));
btnPlayer.setHeight(dip2px(ctx, 48));
btnPlayer.setAnimationStyle(android.R.style.Animation_InputMethod);
btnPlayer.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(Color.TRANSPARENT));
btnPlayer.showAtLocation(ctx.getWindow().getDecorView(), Gravity.LEFT | Gravity.TOP, dip2px(ctx, 108), 10);
}
catch(e){
ESP.toast(e+", "+e.lineNumber);
}
}
}));
