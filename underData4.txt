if(i==302&&u[4].c1==0){
var bo = Level.dropItem(x, y, z, 1, 352, 1, 0);
new java.lang.Thread({
run : function(){
java.lang.Thread.sleep(1500);
explode(Entity.getX(bo), Entity.getY(bo)+0.5, Entity.getZ(bo), 2.5);
}
}).start();
u[4].c1 = 150;
}
if(i==303&&u[4].c2==0){
px = Player.getX();
py = Player.getY();
pz = Player.getZ();
yaw = Math.floor(getYaw());
sin = -Math.sin(yaw/180*Math.PI);
cos = Math.cos(yaw/180*Math.PI);
for(var yy=py+1;yy<py+6;yy++)
setTile(px, yy, pz, 35);
new java.lang.Thread({
run : function(){
java.lang.Thread.sleep(300);
for(var yy=py+1;yy<py+6;yy++)
setTile(px, yy, pz, 0);
for(var ss=1;ss<6;ss++)
setTile(px+ss*sin, py+ss, pz+ss*cos, 35);
java.lang.Thread.sleep(300);
for(var ss=1;ss<6;ss++){
setTile(px+ss*sin, py+ss, pz+ss*cos, 0);
setTile(px+ss*sin, py-1, pz+ ss*cos, 35);
}
java.lang.Thread.sleep(300);
for(var ss=1;ss<6;ss++)
setTile(px+ss*sin, py-1, pz+ ss*cos, 0);
ESP.antiLack(3);
explode(px+4*sin, py-1, pz+4*cos, 2);
explode(px+7*sin, py-1, pz+7*cos, 2);
}
}).start();
u[4].c2 = 300;
}
if(i==304&&u[4].c3==0){
for(var yy=y+1;yy<y+5;yy++){
setTile(x+2, yy, z+2, 35);
setTile(x+2, yy, z, 35);
setTile(x+2, yy, z-2, 35);
setTile(x, yy, z+2, 35);
setTile(x, yy, z, 35);
setTile(x, yy, z-2, 35);
setTile(x-2, yy, z+2, 35);
setTile(x-2, yy, z, 35);
setTile(x-2, yy, z-2, 35);
}
new java.lang.Thread({
run : function(){
java.lang.Thread.sleep(2000);
explode(x, y+3, z, 2.5);
}
}).start();
u[4].c3 = 300;
}
if(i==305&&u[4].c4==0){
ESP.heal(u[4].p);
p2x = Player.getX();
p2y = Player.getY()-2;
p2z = Player.getZ();
for(var p2w=3;p2w<17;p2w++){
setTile(p2x+p2w, p2y+2, p2z+p2w, 35);
setTile(p2x+p2w, p2y+2, p2z, 35);
setTile(p2x+p2w, p2y+2, p2z-p2w, 35);
setTile(p2x, p2y+2, p2z+p2w, 35);
setTile(p2x, p2y+2, p2z-p2w, 35);
setTile(p2x-p2w, p2y+2, p2z+p2w, 35);
setTile(p2x-p2w, p2y+2, p2z, 35);
setTile(p2x-p2w, p2y+2, p2z-p2w, 35);
}
new java.lang.Thread({
run : function(){
java.lang.Thread.sleep(1500);
for(var p2w=2;p2w<8;p2w++){
setTile(p2x+p2w, p2y+2, p2z+p2w, 0);
setTile(p2x+p2w, p2y+2, p2z, 0);
setTile(p2x+p2w, p2y+2, p2z-p2w, 0);
setTile(p2x, p2y+2, p2z+p2w, 0);
setTile(p2x, p2y+2, p2z-p2w, 0);
setTile(p2x-p2w, p2y+2, p2z+p2w, 0);
setTile(p2x-p2w, p2y+2, p2z, 0);
setTile(p2x-p2w, p2y+2, p2z-p2w, 0);
ESP.antiLack(15);
explode(p2x+2*p2w, p2y+2, p2z+2*p2w, 2);
explode(p2x+2*p2w, p2y+2, p2z, 2);
explode(p2x+2*p2w, p2y+2, p2z-2*p2w, 2);
explode(p2x, p2y+2, p2z+2*p2w, 2);
explode(p2x, p2y+2, p2z-2*p2w, 2);
explode(p2x-2*p2w, p2y+2, p2z+2*p2w, 2);
explode(p2x-2*p2w, p2y+2, p2z, 2);
explode(p2x-2*p2w, p2y+2, p2z-2*p2w, 2);
}
java.lang.Thread.sleep(60000);
autoRecover(p2x, p2y-3, p2z, 19, 3);
java.lang.Thread.sleep(1500);
autoRecover(p2x, p2y-2, p2z, 19, 3);
java.lang.Thread.sleep(1500);
autoRecover(p2x, p2y-1, p2z, 19, 3);
java.lang.Thread.sleep(1500);
autoRecover(p2x, p2y, p2z, 19, 2);
}
}).start();
u[4].c4 = 1800;
}