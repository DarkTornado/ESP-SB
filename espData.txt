if(menu==null){
ctx.runOnUiThread(new java.lang.Runnable({
run: function(){
try{
btnTime = new PopupWindow();
var layout = new android.widget.RelativeLayout(ctx);
var button = makeButton(" day/night ", "dayNight();");
if(emcolor==1){
button.setBackgroundColor(Color.argb(70, 255, 255, 255));
}
else if(emcolor==2){
button.setBackgroundColor(Color.argb(0, 0, 0, 0));
}
else{
button.setBackgroundColor(Color.argb(70, 0, 0, 0));
}
layout.addView(button);
btnTime.setContentView(layout);
btnTime.setWidth(dip2px(ctx, 105));
btnTime.setHeight(dip2px(ctx, 48));
btnTime.setAnimationStyle(android.R.style.Animation_InputMethod);
btnTime.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(Color.TRANSPARENT));
btnTime.showAtLocation(ctx.getWindow().getDecorView(), Gravity.LEFT|Gravity.TOP, 10, 10);
//------
menu = new PopupWindow();
var layout = new LinearLayout(ctx);
layout.setOrientation(1);
var text = new TextView(ctx);
text.setText("ESP\nManager\n");
text.setTextSize(25);
text.setGravity(Gravity.CENTER);
text.setTextColor(Color.CYAN);
text.setOnClickListener(new View.OnClickListener(){
onClick: function(v){
SB.hiddenAbility();
}
});
if(hhhhh!=0){
text.setTextColor(Color.RED);
text.setOnClickListener(new View.OnClickListener(){
onClick: function(v){
ESP.toast("They are coming...");
}
});
}
layout.addView(text);

var btns = [];
for(var n=0;n<100;n++){
btns[n] = new Button(ctx);
btns[n].setText(ra.n[n]);
btns[n].setId(n);
btns[n].setOnClickListener(new View.OnClickListener(){
onClick: function(v){
if(!mcpev&&(v.getId()==82||v.getId()==83||v.getId()==84||v.getId()==86||v.getId()==87)) ESP.toast("0.8.1 이하에서는 사용할 수 없습니다");
else SB.espManage(v.getId());
}
});
layout.addView(btns[n]);
}
var mdtj = makeButton("Dark Tornado jr.", "SB.hyperManager(0);");
mdtj.setOnLongClickListener(new View.OnLongClickListener(){
onLongClick: function(v){
SB.hyperManager(3);
return true;
}
});
var mfe = makeButton("Fire Expert", "SB.hyperManager(1);");
mfe.setOnLongClickListener(new View.OnLongClickListener(){
onLongClick: function(v){
SB.hyperManager(2);
return true;
}
});
var metc = makeButton("ETC", "otherESPManager();");
var minfo = makeButton("도움말", function(){
ESP.infoDialog("초능력자 대전", "\"초능력자 대전\"은 Dark Tornado가 만든 능력자 스크립트로서, 무단 공유는 허용하나, 무단 수정 및 자신이 만들었다고 주장하는 행위는 금지하며, 그냥 또는 학습을 위해 열어보는 것은 허용합니다.\n대략적인 사용법은 명령어 \"/help\"또는 \"/도움말\"을 치시면 나옵니다.\n오른쪽 아래의 \"EM\"버튼으로 on/off되는 이 버튼들(?)은 \"ESP Manager\"이며, 이곳에 있는 기능들은 대부분이 명령어로도 사용이 가능합니다. EM버튼은 위치 수정이 가능합니다.\nESP Manager의 기능들은 능력 비활성화(타 스크립트의 능력자의 경우 불가)와 능력자 전송, 사살, 회복 등이며, 서버관리자의 기능도 어느정도는 있습니다. 기능들은 버튼의  내용을 해석하시면 될 듯 싶습니다.\nESP Manager가 지원하는 능력자 스크립트는 초능력자 대전, 초능력자 대전+와 ESP-Else에 속한 능력자들입니다. ESP Manager는 마법사 대전의 Wizard Manager, ESP-Else의 능력 on/off 기능과 연동되어 있습니다.\n", "© 2014-2017 Dark Tornado\n(http://blog.naver.com/dt3141592)");
});

var exit = new Button(ctx);
exit.setText("EXIT");
exit.setOnClickListener(new View.OnClickListener(){
onClick: function(v){
if(menu!=null){
menu.dismiss();
menu = null;
}
if(btnTime!=null){
btnTime.dismiss();
btnTime = null;
}
}
});
layout.addView(mdtj);
layout.addView(mfe);

if(he.on){
var line = new TextView(ctx);
line.setText("--<H.E.>--");
line.setTextSize(13);
line.setGravity(Gravity.CENTER);
layout.addView(line);
var button = [];
for(var n in he.names){
button[n] = new Button(ctx);
button[n].setText(he.names[n]);
button[n].setId(Number(n)+100);
button[n].setOnClickListener(new View.OnClickListener(){
onClick: function(v){
SBh.espManage(Number(v.getId())-100);
}
});
layout.addView(button[n]);
}

if(he.on2){
var btns = [];
for(var n in he.names2){
btns[n] = new Button(ctx);
btns[n].setText(he.names2[n]);
btns[n].setId(Number(n)+107);
btns[n].setOnClickListener(new View.OnClickListener(){
onClick: function(v){
SBh.espManage(Number(v.getId())-100);
}
});
layout.addView(btns[n]);
}
}

var line2 = new TextView(ctx);
line2.setText("--------");
line2.setTextSize(13);
line2.setGravity(Gravity.CENTER);
layout.addView(line2);
}

layout.addView(minfo);
layout.addView(metc);
layout.addView(exit);

var txt = new TextView(ctx);
txt.setText("\n© 2014-2017 Dark Tornado\n");
txt.setTextSize(11);
txt.setGravity(Gravity.CENTER);
txt.setOnClickListener(new View.OnClickListener(){
onClick: function(v){
if(!he.on) passwordDialog();
}
});
txt.setOnLongClickListener(new View.OnLongClickListener(){
onLongClick: function(v){
if(he.on&&!he.on2){
he.on2 = true;
ESP.toast("ESP - 15가 해제되었습니다.");
}
return true;
}
});
layout.addView(txt);

var scroll = makeScroll(layout,menu);
menu.setContentView(scroll);
menu.setAnimationStyle(android.R.style.Animation_Translucent);
menu.setBackgroundDrawable(new android.graphics.drawable.ColorDrawable(Color.BLACK));
menu.showAtLocation(ctx.getWindow().getDecorView(),Gravity.RIGHT|Gravity.TOP, 0, 0);
ESP.toast("ESP Manager on");
}
catch(e){
clientMessage(e+", "+e.lineNumber);
}
}
}));
}
else if(menu!=null){
ctx.runOnUiThread(new java.lang.Runnable({
run: function(){
try{
if(menu!=null){
menu.dismiss();
menu = null;
}
if(btnTime!=null){
btnTime.dismiss();
btnTime = null;
}
if(menu2!=null){
menu2.dismiss();
menu2 = null;
}
if(menu3!=null){
menu3.dismiss();
menu3 = null;
}
if(menu4!=null){
menu4.dismiss();
menu4 = null;
}
if(menu5!=null){
menu5.dismiss();
menu5 = null;
}
if(menuS!=null){
menuS.dismiss();
menuS = null;
}
if(menuE!=null){
menuE.dismiss();
menuE = null;
}
}
catch(e){
clientMessage("error : "+e);
}
}
}));
ESP.toast("ESP Manager off");
}
