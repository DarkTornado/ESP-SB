if(u[0].p==pe){
if(i==302&&u[0].c1==0){
setTile(x+1, y+1, z, 35);
setTile(x-1, y+1, z, 35);
setTile(x, y+1, z+1, 35);
setTile(x, y+1, z-1, 35);
u[0].c1 = 150;
}
if(i==303&&u[0].c2==0){
setTile(x+1, y+1, z, 35);
setTile(x-1, y+1, z, 35);
setTile(x, y+1, z+1, 35);
setTile(x, y+1, z-1, 35);
new Thread({
run : function(){
Thread.sleep(1000);
ESP.antiLack(15);
explode(x, y+2, z, 2);
}
}).start();
u[0].c2 = 300;
}
if(i==304&&u[0].c3==0){
var p2x, p2y, p2z;
p2x = Player.getX();
p2y = Player.getY()-2;
p2z = Player.getZ();
setTile(p2x+3, p2y+2, p2z+1, 35);
setTile(p2x+3, p2y+2, p2z-1, 35);
setTile(p2x-3, p2y+2, p2z+1, 35);
setTile(p2x-3, p2y+2, p2z-1, 35);
setTile(p2x+1, p2y+2, p2z+3, 35);
setTile(p2x+1, p2y+2, p2z-3, 35);
setTile(p2x-1, p2y+2, p2z+3, 35);
setTile(p2x-1, p2y+2, p2z-3, 35);
new Thread({
run : function(){
Thread.sleep(1000);
ESP.antiLack(15);
explode(p2x+4, p2y+2, p2z+1, 2);
explode(p2x+4, p2y+2, p2z-1, 2);
explode(p2x-4, p2y+2, p2z+1, 2);
explode(p2x-4, p2y+2, p2z-1, 2);
explode(p2x+1, p2y+2, p2z+4, 2);
explode(p2x+1, p2y+2, p2z-4, 2);
explode(p2x-1, p2y+2, p2z+4, 2);
explode(p2x-1, p2y+2, p2z-4, 2);
}
}).start();
u[0].c3 = 300;
}
if(i==305&&u[0].c4==0){
ESP.heal(u[0].p);
var p2x, p2y, p2z;
p2x = Player.getX();
p2y = Player.getY()-2;
p2z = Player.getZ();
setTile(p2x+3, p2y+1, p2z+1, 37);
setTile(p2x+3, p2y+1, p2z-1, 37);
setTile(p2x-3, p2y+1, p2z+1, 37);
setTile(p2x-3, p2y+1, p2z-1, 37);
setTile(p2x+1, p2y+1, p2z+3, 37);
setTile(p2x+1, p2y+1, p2z-3, 37);
setTile(p2x-1, p2y+1, p2z+3, 37);
setTile(p2x-1, p2y+1, p2z-3, 37);
arroundMobHealthDown(u[0].p, 30, 10);
u[0].c4 = 1800;
}
}
if(u[1].p==pe){
if(i==302&&u[1].c1==0){
setTile(x+1, y+1, z, 51);
setTile(x-1, y+1, z, 51);
setTile(x, y+1, z+1, 51);
setTile(x, y+1, z-1, 51);
u[1].c1 = 150;
}
if(i==303&&u[1].c2==0){
px = Player.getX();
pz = Player.getZ();
yaw = Math.floor(getYaw());
sin = -Math.sin(yaw/180*Math.PI);
cos = Math.cos(yaw/180*Math.PI);
for(var n=3;n<25;n++)
setTile(px+n*sin, y+1, pz+n*cos, 51);
u[1].c2 = 300;
}
if(i==304&&u[1].c3==0){
var p2x, p2y, p2z;
p2x = Player.getX();
p2y = Player.getY()-2;
p2z = Player.getZ();
setTile(p2x+3, p2y+1, p2z+1, 51);
setTile(p2x+3, p2y+1, p2z-1, 51);
setTile(p2x-3, p2y+1, p2z+1, 51);
setTile(p2x-3, p2y+1, p2z-1, 51);
setTile(p2x+1, p2y+1, p2z+3, 51);
setTile(p2x+1, p2y+1, p2z-3, 51);
setTile(p2x-1, p2y+1, p2z+3, 51);
setTile(p2x-1, p2y+1, p2z-3, 51);
u[1].c3 = 300;
}
if(i==305&&u[1].c4==0){
ESP.heal(u[1].p);
arroundMobFireTicks(u[1].p, 30, 30);
u[1].c4 = 1800;
}
}
if(u[2].p==pe){
if(i==302&&u[2].c1==0){
setTile(x, y+1, z, 30);
setTile(x+1, y+1, z, 30);
setTile(x-1, y+1, z, 30);
setTile(x, y+1, z+1, 30);
setTile(x, y+1, z-1, 30);
u[2].c1 = 150;
}
if(i==303&&u[2].c2==0){
var p2xa2, p2za2;
p2xa2 = Math.abs(x-Player.getX());
p2za2 = Math.abs(z-Player.getZ());
if(p2xa2>p2za2){
for(var yy=y+1;yy<y+3;yy++)
for(var zz=z-1;zz<z+2;zz++)
setTile(x, yy, zz, 3);
}
else if(p2xa2<p2za2){
for(var xx=x-1;xx<x+2;xx++)
for(var yy=y+1;yy<y+3;yy++)
setTile(xx, yy, z, 3);
}
u[2].c2 = 300;
}
if(i==304&&u[2].c3==0){
setTiles(x-2, x+2, y+1, y+5, z-2, z+2, 20);
setTiles(x-1, x+2, y+2, y+4, z-1, z+1, 9);
new Thread({
run : function(){
Thread.sleep(7500);
setTiles(x-2, x+2, y+1, y+5, z-2, z+2, 0);
}
}).start();
u[2].c3 = 300;
}
if(i==305&&u[2].c4==0){
ESP.heal(u[2].p);
arroundMobHealthDown(u[2].p, 20, 6);
var p2x, p2y, p2z;
p2x = Player.getX();
p2y = Player.getY()-2;
p2z = Player.getZ();
setTile(p2x+4, p2y+3, p2z+1, 8);
setTile(p2x+4, p2y+3, p2z-1, 8);
setTile(p2x-4, p2y+3, p2z+1, 8);
setTile(p2x-4, p2y+3, p2z-1, 8);
setTile(p2x+1, p2y+3, p2z+4, 8);
setTile(p2x+1, p2y+3, p2z-4, 8);
setTile(p2x-1, p2y+3, p2z+4, 8);
setTile(p2x-1, p2y+3, p2z-4, 8);
new Thread({
run : function(){
Thread.sleep(4500);
setTile(p2x+4, p2y+3, p2z+1, 0);
setTile(p2x+4, p2y+3, p2z-1, 0);
setTile(p2x-4, p2y+3, p2z+1, 0);
setTile(p2x-4, p2y+3, p2z-1, 0);
setTile(p2x+1, p2y+3, p2z+4, 0);
setTile(p2x+1, p2y+3, p2z-4, 0);
setTile(p2x-1, p2y+3, p2z+4, 0);
setTile(p2x-1, p2y+3, p2z-4, 0);
}
}).start();
u[2].c4 = 1800;
}
}
if(u[3].p==pe){
if(i==302&&u[3].c1==0){
teleport(u[3].p, x+(x-Player.getX()), y+3, z+(z-Player.getZ()));
u[3].c1 = 150;
}
if(i==303&&u[3].c2==0){
px = Player.getX();
pz = Player.getZ();
yaw = Math.floor(getYaw());
sin = -Math.sin(yaw/180*Math.PI);
cos = Math.cos(yaw/180*Math.PI);
for(var n=3;n<25;n++)
setTile(px+n*sin, y+2, pz+n*cos, 35);
new Thread({
run : function(){
Thread.sleep(500);
ESP.antiLack(15);
for(var n=3;n<25;n++)
explode(px+n*sin, y+2, pz+n*cos, 1.8);
}
}).start();
u[3].c2 = 300;
}
if(i==304&&u[3].c3==0){
for(var yy=y+1;yy<y+5;yy++){
setTile(x+2, yy, z+2, 35);
setTile(x+2, yy, z, 35);
setTile(x+2, yy, z-2, 35);
setTile(x, yy, z+2, 35);
setTile(x, yy, z, 35);
setTile(x, yy, z-2, 35);
setTile(x-2, yy, z+2, 35);
setTile(x-2, yy, z, 35);
setTile(x-2, yy, z-2, 35);
}
new Thread({
run : function(){
Thread.sleep(2000);
explode(x, y+3, z, 3);
}
}).start();
u[3].c3 = 300;
}
if(i==305&&u[3].c4==0){
ESP.heal(u[3].p);
var p2x, p2y, p2z;
for each(var e in Entity.getAll()){
p2x = Math.abs(Player.getX()-Entity.getX(e));
p2y = Math.abs(Player.getY()-Entity.getY(e));
p2z = Math.abs(Player.getZ()-Entity.getZ(e));
if(p2x<=35&&p2y<=35&&p2z<=35&&u[3].p!=e){
teleport(e, Entity.getX(e), Entity.getY(e)+17, Entity.getZ(e));
Entity.setHealth(e, Entity.getHealth(e)-6);
}
}
u[3].c4 = 1800;
}
}
if(u[4].p==pe){
if(i==302&&u[4].c1==0){
var bo = Level.dropItem(x, y, z, 1, 352, 1, 0);
new Thread({
run : function(){
Thread.sleep(1500);
explode(Entity.getX(bo), Entity.getY(bo)+0.5, Entity.getZ(bo), 2.5);
}
}).start();
u[4].c1 = 150;
}
if(i==303&&u[4].c2==0){
px = Player.getX();
py = Player.getY();
pz = Player.getZ();
yaw = Math.floor(getYaw());
sin = -Math.sin(yaw/180*Math.PI);
cos = Math.cos(yaw/180*Math.PI);
for(var yy=py+1;yy<py+6;yy++)
setTile(px, yy, pz, 35);
new Thread({
run : function(){
Thread.sleep(300);
for(var yy=py+1;yy<py+6;yy++)
setTile(px, yy, pz, 0);
for(var ss=1;ss<6;ss++)
setTile(px+ss*sin, py+ss, pz+ss*cos, 35);
Thread.sleep(300);
for(var ss=1;ss<6;ss++){
setTile(px+ss*sin, py+ss, pz+ss*cos, 0);
setTile(px+ss*sin, py-1, pz+ ss*cos, 35);
}
Thread.sleep(300);
for(var ss=1;ss<6;ss++)
setTile(px+ss*sin, py-1, pz+ ss*cos, 0);
ESP.antiLack(5);
explode(px+4*sin, py-1, pz+4*cos, 2);
explode(px+7*sin, py-1, pz+7*cos, 2);
}
}).start();
u[4].c2 = 300;
}
if(i==304&&u[4].c3==0){
for(var yy=y+1;yy<y+5;yy++){
setTile(x+2, yy, z+2, 35);
setTile(x+2, yy, z, 35);
setTile(x+2, yy, z-2, 35);
setTile(x, yy, z+2, 35);
setTile(x, yy, z, 35);
setTile(x, yy, z-2, 35);
setTile(x-2, yy, z+2, 35);
setTile(x-2, yy, z, 35);
setTile(x-2, yy, z-2, 35);
}
new Thread({
run : function(){
Thread.sleep(2000);
explode(x, y+3, z, 2.5);
}
}).start();
u[4].c3 = 300;
}
if(i==305&&u[4].c4==0){
ESP.heal(u[4].p);
p2x = Player.getX();
p2y = Player.getY()-2;
p2z = Player.getZ();
for(var p2w=3;p2w<17;p2w++){
setTile(p2x+p2w, p2y+2, p2z+p2w, 35);
setTile(p2x+p2w, p2y+2, p2z, 35);
setTile(p2x+p2w, p2y+2, p2z-p2w, 35);
setTile(p2x, p2y+2, p2z+p2w, 35);
setTile(p2x, p2y+2, p2z-p2w, 35);
setTile(p2x-p2w, p2y+2, p2z+p2w, 35);
setTile(p2x-p2w, p2y+2, p2z, 35);
setTile(p2x-p2w, p2y+2, p2z-p2w, 35);
}
new Thread({
run : function(){
Thread.sleep(1500);
for(var p2w=2;p2w<8;p2w++){
setTile(p2x+p2w, p2y+2, p2z+p2w, 0);
setTile(p2x+p2w, p2y+2, p2z, 0);
setTile(p2x+p2w, p2y+2, p2z-p2w, 0);
setTile(p2x, p2y+2, p2z+p2w, 0);
setTile(p2x, p2y+2, p2z-p2w, 0);
setTile(p2x-p2w, p2y+2, p2z+p2w, 0);
setTile(p2x-p2w, p2y+2, p2z, 0);
setTile(p2x-p2w, p2y+2, p2z-p2w, 0);
ESP.antiLack(15);
explode(p2x+2*p2w, p2y+2, p2z+2*p2w, 2);
explode(p2x+2*p2w, p2y+2, p2z, 2);
explode(p2x+2*p2w, p2y+2, p2z-2*p2w, 2);
explode(p2x, p2y+2, p2z+2*p2w, 2);
explode(p2x, p2y+2, p2z-2*p2w, 2);
explode(p2x-2*p2w, p2y+2, p2z+2*p2w, 2);
explode(p2x-2*p2w, p2y+2, p2z, 2);
explode(p2x-2*p2w, p2y+2, p2z-2*p2w, 2);
}
Thread.sleep(60000);
autoRecover(p2x, p2y-3, p2z, 19, 3);
Thread.sleep(1500);
autoRecover(p2x, p2y-2, p2z, 19, 3);
Thread.sleep(1500);
autoRecover(p2x, p2y-1, p2z, 19, 3);
Thread.sleep(1500);
autoRecover(p2x, p2y, p2z, 19, 2);
}
}).start();
u[4].c4 = 1800;
}
}
if(u[5].p==pe){
if(i==302&&u[5].c1==0){
Entity.addEffect(u[5].p, MobEffect.movementSpeed, 75, 1, true, false);
u[5].c1 = 150;
}
if(i==303&&u[5].c2==0){
Entity.addEffect(u[5].p, MobEffect.regeneration, 150, 1, true, false);
u[5].c2 = 300;
}
if(i==304&&u[5].c3==0){
Entity.addEffect(u[5].p, MobEffect.damageResistance, 150, 1, true, false);
u[5].c3 = 300;
}
if(i==305&&u[5].c4==0){
ESP.heal(u[5].p);
Entity.addEffect(u[5].p, MobEffect.invisibility, 450, 1, true, false);
arroundMobHealthDown(u[5].p, 10, 4);
u[5].c4 = 1800;
}
}
if(u[6].p==pe){
if(i==302&&u[6].c1==0){
px = Player.getX();
pz = Player.getZ();
yaw = Math.floor(getYaw());
sin = -Math.sin(yaw/180*Math.PI);
cos = Math.cos(yaw/180*Math.PI);
for(var n=3;n<19;n++)
setTile(px+n*sin, y+2, pz+n*cos, 17);
setTile(px+19*sin, y+2, pz+19*cos, 42);
setTile(px+18*sin, y+1, pz+18*cos, 42);
setTile(px+18*sin, y+3, pz+18*cos, 42);
setTile(px+17*sin, y+1, pz+17*cos, 42);
setTile(px+17*sin, y+3, pz+17*cos, 42);
new Thread({
run : function(){
Thread.sleep(500);
ESP.antiLack(15);
for(var n=3;n<20;n++)
setTile(px+n*sin, y+2, pz+n*cos, 0);
setTile(px+18*sin, y+1, pz+18*cos, 0);
setTile(px+18*sin, y+3, pz+18*cos, 0);
setTile(px+17*sin, y+1, pz+17*cos, 0);
setTile(px+17*sin, y+3, pz+17*cos, 0);
ESP.antiLack(15);
explode(px+16*sin, y+2, pz+16*cos, 2);
explode(px+11*sin, y+2, pz+11*cos, 2);
}
}).start();
u[6].c1 = 150;
}
if(i==303&&u[6].c2==0){
px = Player.getX();
py = Player.getY();
pz = Player.getZ();
yaw = Math.floor(getYaw());
sin = -Math.sin(yaw/180*Math.PI);
cos = Math.cos(yaw/180*Math.PI);
setTile(px+3*sin, py, pz+3*cos, 17);
setTile(px+4*sin, py, pz+4*cos, 17);
setTile(px+5*sin, py-1, pz+5*cos, 41);
setTile(px+5*sin, py, pz+5*cos, 41);
setTile(px+5*sin, py+1, pz+5*cos, 41);
for(var ss=6;ss<11;ss++)
setTile(px+ss*sin, py, pz+ss*cos, 42);
new Thread({
run : function(){
Thread.sleep(500);
setTile(px+3*sin, py, pz+3*cos, 0);
setTile(px+4*sin, py, pz+4*cos, 0);
setTile(px+5*sin, py-1, pz+5*cos, 0);
setTile(px+5*sin, py, pz+5*cos, 0);
setTile(px+5*sin, py+1, pz+5*cos, 0);
setTile(px+5*sin, py, pz+5*cos, 17);
setTile(px+6*sin, py, pz+6*cos, 17);
setTile(px+7*sin, py-1, pz+7*cos, 41);
setTile(px+7*sin, py, pz+7*cos, 41);
setTile(px+7*sin, py+1, pz+7*cos, 41);
for(var ss=10;ss<13;ss++)
setTile(px+ss*sin, py, pz+ss*cos, 42);
Thread.sleep(500);
setTile(px+7*sin, py-1, pz+7*cos, 0);
setTile(px+7*sin, py+1, pz+7*cos, 0);
for(var ss=5;ss<13;ss++)
setTile(px+ss*sin, py, pz+ss*cos, 0);
ESP.antiLack(5);
explode(px+12*sin, py, pz+12*cos, 2);
explode(px+9*sin, py, pz+9*cos, 2);
}
}).start();
u[6].c2 = 300;
}
if(i==304&&u[6].c3==0){
for(var yy=y+1;yy<y+7;yy++)
setTile(x, yy, z, 35);
setTile(x, y+1, z+1, 35);
setTile(x, y+1, z-1, 35);
new Thread({
run : function(){
Thread.sleep(1000);
for(var yy=y+1;yy<y+7;yy++)
setTile(x, yy, z, 0)
setTile(x, y+1, z+1, 0);
setTile(x, y+1, z-1, 0);
ESP.antiLack(15);
explode(x, y+2, z, 3);
}
}).start();
u[6].c3 = 300;
}
if(i==305&&u[6].c4==0){
ESP.heal(u[6].p);
var p2x, p2y, p2z;
p2x = Player.getX();
p2y = Player.getY()-2;
p2z = Player.getZ();
for(var yy=y+1;yy<y+9;yy++){
setTile(p2x+7, yy, p2z+7, 17);
setTile(p2x+7, yy, p2z, 17);
setTile(p2x+7, yy, p2z-7, 17);
setTile(p2x, yy, p2z+7, 17);
setTile(p2x, yy, p2z-7, 17);
setTile(p2x-7, yy, p2z+7, 17);
setTile(p2x-7, yy, p2z, 17);
setTile(p2x-7, yy, p2z-7, 17);
}
new Thread({
run : function(){
Thread.sleep(2000);
for(var yy=y+1;yy<y+9;yy++){
setTile(p2x+7, yy, p2z+7, 0);
setTile(p2x+7, yy, p2z, 0);
setTile(p2x+7, yy, p2z-7, 0);
setTile(p2x, yy, p2z+7, 0);
setTile(p2x, yy, p2z-7, 0);
setTile(p2x-7, yy, p2z+7, 0);
setTile(p2x-7, yy, p2z, 0);
setTile(p2x-7, yy, p2z-7, 0);
}
ESP.antiLack(15);
explode(p2x+7, p2y+1, p2z+7, 3);
explode(p2x+7, p2y+1, p2z, 3);
explode(p2x+7, p2y+1, p2z-7, 3);
explode(p2x, p2y+1, p2z+7, 3);
explode(p2x, p2y+1, p2z, 3);
explode(p2x, p2y+1, p2z-7, 3);
explode(p2x-7, p2y+1, p2z+7, 3);
explode(p2x-7, p2y+1, p2z, 3);
explode(p2x-7, p2y+1, p2z-7, 3);
Thread.sleep(60000);
autoRecover(p2x, p2y-3, p2z, 21, 3);
Thread.sleep(1500);
autoRecover(p2x, p2y-2, p2z, 21, 3);
Thread.sleep(1500);
autoRecover(p2x, p2y-1, p2z, 21, 3);
Thread.sleep(1500);
autoRecover(p2x, p2y, p2z, 21, 2);
}
}).start();
u[6].c4 = 1800;
}
}
if(u[7].p==pe){
if(i==302&&u[7].c1==0){
Server.sendChat("I am Temmie!!!!!!!");
Server.sendChat("I am Temmie!!!!!!!");
u[7].c1 = 150;
}
if(i==303&&u[7].c2==0){
Entity.addEffect(u[7].p, MobEffect.movementSpeed, 150, 1, true, false);
u[7].c2 = 300;
}
if(i==304&&u[7].c3==0){
Level.spawnMob(x, y+2, z, 32);
Level.spawnMob(x, y+2, z, 32);
Level.spawnMob(x, y+2, z, 32);
u[7].c3 = 300;
}
if(i==305&&u[7].c4==0){
ESP.heal(u[7].p);
for(var n=0;n<20;n++)
Level.spawnMob(x, y+2, z, 32);
u[7].c4 = 1800;
}
}
if(u[8].p==pe){
if(i==302&&u[8].c1==0){
Entity.addEffect(u[8].p, MobEffect.movementSpeed, 75, 1, true, false);
u[8].c1 = 150;
}
if(i==303&&u[8].c2==0){
Entity.addEffect(u[8].p, MobEffect.movementSpeed, 150, 2, true, false);
Entity.addEffect(u[8].p, MobEffect.jump, 150, 2, true, false);
u[8].c2 = 300;
}
if(i==304&&u[8].c3==0){
setTile(x, y+1, z, 247);
new Thread({
run : function(){
Thread.sleep(500);
setTile(x, y+1, z, 0);
ESP.antiLack(15);
explode(x, y+2, z, 3);
}
}).start();
u[8].c3 = 300;
}
if(i==305&&u[8].c4==0){
ESP.heal(u[8].p);
Level.spawnMob(x, y+2, z, 33);
Level.spawnMob(x, y+2, z, 33);
Level.spawnMob(x, y+2, z, 33);
var ooo, uuu;
for(var n=0;n<5;n++){
var ooo = Level.spawnMob(x, y+2, z, 34);
var uuu = Level.spawnMob(x, y+2, z, 35);
Entity.rideAnimal(ooo, uuu);
}
u[8].c4 = 1800;
}
}
if(u[9].p==pe){
if(i==302&&u[9].c1==0){
setTile(x+2, y+2, z+1, 247);
setTile(x+2, y+2, z, 247);
setTile(x+2, y+2, z-1, 247);
setTile(x-2, y+2, z+1, 247);
setTile(x-2, y+2, z, 247);
setTile(x-2, y+2, z-1, 247);
setTile(x+1, y+2, z+2, 247);
setTile(x, y+2, z+2, 247);
setTile(x-1, y+2, z+2, 247);
setTile(x+1, y+2, z-2, 247);
setTile(x, y+2, z-2, 247);
setTile(x-1, y+2, z-2, 247);
u[9].c1 = 150;
}
if(i==303&&u[9].c2==0){
setTile(x, y+1, z, 247);
new Thread({
run : function(){
Thread.sleep(500);
setTile(x, y+1, z, 0);
ESP.antiLack(15);
explode(x, y+2, z, 2.5);
}
}).start();
u[9].c2 = 300;
}
if(i==304&&u[9].c3==0){
var p2xa2, p2za2;
p2xa2 = Math.abs(x-Player.getX());
p2za2 = Math.abs(z-Player.getZ());
if(p2xa2>p2za2){
for(var yy=y+1;yy<y+4;yy++)
for(var zz=z-2;zz<z+3;zz++)
setTile(x, yy, zz, 247);
}
else if(p2xa2<p2za2){
for(var xx=x-2;xx<x+3;xx++)
for(var yy=y+1;yy<y+4;yy++)
setTile(xx, yy, z, 247);
}
u[9].c3 = 300;
}
if(i==305&&u[9].c4==0){
ESP.heal(u[9].p);
ESP.antiLack(90);
Level.spawnMob(x, y+5, z, 65);
Level.spawnMob(x, y+10, z+3, 65);
Level.spawnMob(x+4, y+7, z, 65);
Level.spawnMob(x, y+15, z-7, 65);
Level.spawnMob(x-9, y+5, z, 65);
Level.spawnMob(x+6, y+17, z+3, 65);
Level.spawnMob(x-8, y+15, z-7, 65);
Level.spawnMob(x-5, y+15, z+5, 65);
Level.spawnMob(x-5, y+7, z, 65);
Level.spawnMob(x, y+14, z+8, 65);
Level.spawnMob(x+1, y+18, z+13, 65);
Level.spawnMob(x-2, y+13, z-6, 65);
new Thread({
run : function(){
Thread.sleep(60000);
autoRecover(p2x, p2y-4, p2z, 15, 3);
Thread.sleep(1500);
autoRecover(p2x, p2y-3, p2z, 15, 3);
Thread.sleep(1500);
autoRecover(p2x, p2y-2, p2z, 15, 3);
Thread.sleep(1500);
autoRecover(p2x, p2y-1, p2z, 15, 3);
Thread.sleep(1500);
autoRecover(p2x, p2y, p2z, 15, 2);
}
}).start();
u[9].c4 = 1800;
}
}
if(u[10].p==pe){
if(i==302&&u[10].c1==0){
setTile(x, y+1, z, 30);
setTile(x+1, y+1, z, 30);
setTile(x-1, y+1, z, 30);
setTile(x, y+1, z+1, 30);
setTile(x, y+1, z-1, 30);
u[10].c1 = 150;
}
if(i==303&&u[10].c2==0){
px = Player.getX();
pz = Player.getZ();
yaw = Math.floor(getYaw());
sin = -Math.sin(yaw/180*Math.PI);
cos = Math.cos(yaw/180*Math.PI);
for(var n=3;n<20;n++)
setTile(px+n*sin, y+1, pz+n*cos, 30);
u[10].c2 = 300;
}
if(i==304&&u[10].c3==0){
Level.spawnMob(x, y+2, z, 35);
Level.spawnMob(x, y+2, z, 35);
Level.spawnMob(x, y+2, z, 35);
u[10].c3 = 300;
}
if(i==305&&u[10].c4==0){
ESP.heal(u[10].p);
var p2x, p2y, p2z;
for each(var e in Entity.getAll()){
p2x = Math.abs(Player.getX()-Entity.getX(e));
p2y = Math.abs(Player.getY()-Entity.getY(e));
p2z = Math.abs(Player.getZ()-Entity.getZ(e));
if(p2x<=20&&p2y<=20&&p2z<=20&&u[10].p!=e){
if(ESP.isPlayer(e)) setTile(Entity.getX(e), Entity.getY(e)-1, Entity.getZ(e), 30);
else setTile(Entity.getX(e), Entity.getY(e), Entity.getZ(e), 30);
}
}
for(var n=0;n<6;n++)
Level.spawnMob(x, y+2, z, 35);
Level.spawnMob(x, y+2, z, 40);
Level.spawnMob(x, y+2, z, 40);
Level.spawnMob(x, y+2, z, 40);
u[10].c4 = 1800;
}
}
if(u[11].p==pe){
if(i==302&&u[11].c1==0){
px = Player.getX();
py = Math.floor(Player.getY())+1;
pz = Player.getZ();
yaw = Math.floor(getYaw());
sin = -Math.sin(yaw/180*Math.PI);
cos = Math.cos(yaw/180*Math.PI);
setTile(px, py, pz, 17);
setTile(px-sin, py+1, pz-cos, 17);
setTile(px-sin, py+3, pz-cos, 41);
setTile(px-2*sin, py+2, pz-2*cos, 41);
setTile(px-3*sin, py+1, pz-3*cos, 41);
for(var ss=3;ss<8;ss++)
setTile(px-ss*sin, py+ss, pz-ss*cos, 42);
new Thread({
run : function(){
Thread.sleep(300);
setTile(px-sin, py+1, pz-cos, 0);
setTile(px-sin, py+3, pz-cos, 0);
setTile(px-2*sin, py+2, pz-2*cos, 0);
setTile(px-3*sin, py+1, pz-3*cos, 0);
for(var ss=3;ss<8;ss++)
setTile(px-ss*sin, py+ss, pz-ss*cos, 0);
setTile(px, py+1, pz, 17);
setTile(px+sin, py+2, pz+cos, 41);
setTile(px, py+2, pz, 41);
setTile(px-sin, py+2, pz-cos, 41);
for(var ss=3;ss<8;ss++)
setTile(px, py+ss, pz, 42);
Thread.sleep(300);
setTile(px, py+1, pz, 0);
setTile(px+sin, py+2, pz+cos, 0);
setTile(px, py+2, pz, 0);
setTile(px-sin, py+2, pz-cos, 0);
for(var ss=3;ss<8;ss++)
setTile(px, py+ss, pz, 0);
setTile(px+sin, py+1, pz+cos, 17);
setTile(px+sin, py+3, pz+cos, 41);
setTile(px+2*sin, py+2, pz+2*cos, 41);
setTile(px+3*sin, py+1, pz+3*cos, 41);
for(var ss=3;ss<8;ss++)
setTile(px+ss*sin, py+ss, pz+ss*cos, 42);
Thread.sleep(300);
setTile(px, py, pz, 0);
setTile(px+sin, py+1, pz+cos, 0);
setTile(px+sin, py+3, pz+cos, 0);
setTile(px+2*sin, py+2, pz+2*cos, 0);
setTile(px+3*sin, py+1, pz+3*cos, 0);
for(var ss=3;ss<8;ss++)
setTile(px+ss*sin, py+ss, pz+ss*cos, 0);
setTile(px+sin, py-1, pz+cos, 17);
setTile(px+2*sin, py-1, pz+2*cos, 17);
setTile(px+3*sin, py-1, pz+3*cos, 41);
setTile(px+3*sin, py, pz+3*cos, 41);
setTile(px+3*sin, py-2, pz+3*cos, 41);
for(var ss=4;ss<9;ss++)
setTile(px+ss*sin, py-1, pz+ss*cos, 42);
Thread.sleep(300);
setTile(px+sin, py-1, pz+cos, 0);
setTile(px+2*sin, py-1, pz+2*cos, 0);
setTile(px+3*sin, py-1, pz+3*cos, 0);
setTile(px+3*sin, py, pz+3*cos, 0);
setTile(px+3*sin, py-2, pz+3*cos, 0);
for(var ss=4;ss<9;ss++)
setTile(px+ss*sin, py-1, pz+ss*cos, 0);
ESP.antiLack(15);
explode(px+8*sin, py-1, pz+8*cos, 2);
explode(px+4*sin, py-1, pz+4*cos, 2);
}
}).start();
u[11].c1 = 150;
}
if(i==303&&u[11].c2==0){
px = Player.getX();
pz = Player.getZ();
yaw = Math.floor(getYaw());
sin = -Math.sin(yaw/180*Math.PI);
cos = Math.cos(yaw/180*Math.PI);
for(var n=3;n<25;n++)
setTile(px+n*sin, y+1, pz+n*cos, 51);
u[11].c2 = 300;
}
if(i==304&&u[11].c3==0){
arroundMobFireTicks(u[11].p, 10, 10);
u[11].c3 = 300;
}
if(i==305&&u[11].c4==0){
ESP.heal(u[11].p);
var p2x, p2y, p2z;
p2x = Player.getX();
p2y = Player.getY()-2;
p2z = Player.getZ();
autoRecover(p2x, p2y+1, p2z, 16, 51);
Entity.addEffect(u[11].p, MobEffect.fireResistance, 200, 0, true, false);
u[11].c4 = 1800;
}
}
if(u[12].p==pe){
if(i==302&&u[12].c1==0){
Entity.addEffect(u[12].p, MobEffect.regeneration, 75, 1, true, false);
u[12].c1 = 150;
}
if(i==303&&u[12].c2==0){
Entity.addEffect(u[12].p, MobEffect.movementSpeed, 150, 1, true, false);
u[12].c2 = 300;
}
if(i==304&&u[12].c3==0){
arroundMobHealthDown(u[12].p, 10, 6);
u[12].c3 = 300;
}
if(i==305&&u[12].c4==0){
if(u[12].s==false){
ESP.sbm("Save", true);
u[12].s = [[], Level.getTime()];
for each(var e in Entity.getAll()){
if(Player.isPlayer(e)||fe==e||magma==e) u[12].s[0].push([e, Entity.getX(e),  Entity.getY(e),  Entity.getZ(e),  Entity.getHealth(e)]);
}
}
else{
ESP.heal(u[12].p);
ESP.sbm("Load", true);
Level.setTime(u[12].s[1]);
var cache = u[12].s[0];
for(var n=0;n<cache.length;n++){
teleport(cache[n][0], cache[n][1], cache[n][2]+0.5, cache[n][3]);
Entity.setHealth(cache[n][0], cache[n][4]);
}
u[12].s = false;
u[12].c4 = 1800;
}
}
}
if(u[13].p==pe){
if(i==302&&u[13].c1==0){
Entity.addEffect(u[13].p, MobEffect.regeneration, 75, 1, true, false);
u[13].c1 = 150;
}
if(i==303&&u[13].c2==0){
Entity.addEffect(u[13].p, MobEffect.movementSpeed, 150, 1, true, false);
u[13].c2 = 300;
}
if(i==304&&u[13].c3==0){
var p2x, p2y, p2z;
p2x = Player.getX();
p2y = Player.getY()-2;
p2z = Player.getZ();
ESP.antiLack(15);
explode(p2x+7, p2y+1, p2z+7, 2);
explode(p2x+7, p2y+1, p2z, 2);
explode(p2x+7, p2y+1, p2z-7, 2);
explode(p2x, p2y+1, p2z+7, 2);
explode(p2x, p2y+1, p2z, 2);
explode(p2x, p2y+1, p2z-7, 2);
explode(p2x-7, p2y+1, p2z+7, 2);
explode(p2x-7, p2y+1, p2z, 2);
explode(p2x-7, p2y+1, p2z-7, 2);
new Thread({
run : function(){
Thread.sleep(10000);
autoRecover(p2x, p2y, p2z, 11, 2);
}
}).start();
u[13].c3 = 300;
}
if(i==305&&u[13].c4==0){
ESP.heal(u[13].p);
var p2x, p2y, p2z;
for each(var e in Entity.getAll()){
p2x = Math.abs(Player.getX()-Entity.getX(e));
p2y = Math.abs(Player.getY()-Entity.getY(e));
p2z = Math.abs(Player.getZ()-Entity.getZ(e));
if(p2x<=20&&p2y<=20&&p2z<=20&&u[13].p!=e){
if(ESP.isPlayer(e)) Entity.setHealth(e, 1);
else Entity.setHealth(e, 0);
}
}
u[13].c4 = 1800;
}
}
if(u[14].p==pe){
if(i==302&&u[14].c1==0){
if(u[14].s==false){
u[14].s = [x, y, z];
setTile(x, y, z, 89);
new Thread({
run : function(){
Thread.sleep(1000);
setTile(x, y, z, b, bd);
}
}).start();
}
else{
teleport(u[14].p, u[14].s[0], u[14].s[1]+3, u[14].s[2]);
u[14].s = false;
u[14].c1 = 150;
}
}
if(i==303&&u[14].c2==0){
Entity.addEffect(u[14].p, MobEffect.movementSpeed, 150, 2, true, false);
var p2x, p2y, p2z;
for each(var e in Entity.getAll()){
p2x = Math.abs(Player.getX()-Entity.getX(e));
p2y = Math.abs(Player.getY()-Entity.getY(e));
p2z = Math.abs(Player.getZ()-Entity.getZ(e));
if(p2x<=30&&p2y<=30&&p2z<=30&&u[14].p!=e&&Entity.getEntityTypeId(e)<64){
try{
Entity.addEffect(e, MobEffect.movementSlowdown, 75, 9, true, false);
}
catch(e){
//null
}
}
}
u[14].c2 = 300;
}
if(i==304&&u[14].c3==0){
px = Player.getX();
pz = Player.getZ();
yaw = Math.floor(getYaw());
sin = -Math.sin(yaw/180*Math.PI);
cos = Math.cos(yaw/180*Math.PI);
for(var n=3;n<25;n++)
setTile(px+n*sin, y+2, pz+n*cos, 35);
new Thread({
run : function(){
Thread.sleep(500);
ESP.antiLack(15);
for(var n=3;n<25;n++)
explode(px+n*sin, y+2, pz+n*cos, 1.8);
}
}).start();
u[14].c3 = 300;
}
if(i==305&&u[14].c4==0){
ESP.heal(u[14].p);
var p2x, p2y, p2z;
for each(var e in Entity.getAll()){
p2x = Math.abs(Player.getX()-Entity.getX(e));
p2y = Math.abs(Player.getY()-Entity.getY(e));
p2z = Math.abs(Player.getZ()-Entity.getZ(e));
if(p2x<=40&&p2y<=40&&p2z<=40&&u[14].p!=e){
try{
Entity.addEffect(e, MobEffect.blindness, 150, 0, true, false);
}
catch(e){
//null
}
teleport(e, Entity.getX(e), Entity.getY(e)+9, Entity.getZ(e));
Entity.setHealth(e, Entity.getHealth(e)-6);
Entity.setFireTicks(e, 5);
}
}
u[14].c4 = 1800;
}
}
