if(i==302&&u[14].c1==0){
if(u[14].s==false){
u[14].s = [x, y, z];
setTile(x, y, z, 89);
new java.lang.Thread({
run : function(){
java.lang.Thread.sleep(1000);
setTile(x, y, z, b, bd);
}
}).start();
}
else{
teleport(u[14].p, u[14].s[0], u[14].s[1]+3, u[14].s[2]);
u[14].s = false;
u[14].c1 = 150;
}
}
if(i==303&&u[14].c2==0){
Entity.addEffect(u[14].p, MobEffect.movementSpeed, 150, 2, true, false);
var p2x, p2y, p2z;
for each(var e in Entity.getAll()){
p2x = Math.abs(Player.getX()-Entity.getX(e));
p2y = Math.abs(Player.getY()-Entity.getY(e));
p2z = Math.abs(Player.getZ()-Entity.getZ(e));
if(p2x<=30&&p2y<=30&&p2z<=30&&u[14].p!=e&&Entity.getEntityTypeId(e)<64){
try{
Entity.addEffect(e, MobEffect.movementSlowdown, 75, 9, true, false);
}
catch(e){
//null
}
}
}
u[14].c2 = 300;
}
if(i==304&&u[14].c3==0){
px = Player.getX();
pz = Player.getZ();
yaw = Math.floor(getYaw());
sin = -Math.sin(yaw/180*Math.PI);
cos = Math.cos(yaw/180*Math.PI);
for(var n=3;n<25;n++)
setTile(px+n*sin, y+2, pz+n*cos, 35);
new java.lang.Thread({
run : function(){
java.lang.Thread.sleep(500);
ESP.antiLack(15);
for(var n=3;n<25;n++)
explode(px+n*sin, y+2, pz+n*cos, 1.8);
}
}).start();
u[14].c3 = 300;
}
if(i==305&&u[14].c4==0){
ESP.heal(u[14].p);
var p2x, p2y, p2z;
for each(var e in Entity.getAll()){
p2x = Math.abs(Player.getX()-Entity.getX(e));
p2y = Math.abs(Player.getY()-Entity.getY(e));
p2z = Math.abs(Player.getZ()-Entity.getZ(e));
if(p2x<=40&&p2y<=40&&p2z<=40&&u[14].p!=e){
try{
Entity.addEffect(e, MobEffect.blindness, 150, 0, true, false);
}
catch(e){
//null
}
teleport(e, Entity.getX(e), Entity.getY(e)+9, Entity.getZ(e));
Entity.setHealth(e, Entity.getHealth(e)-6);
Entity.setFireTicks(e, 5);
}
}
u[14].c4 = 1800;
}